#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "SensorCube"
  https://create.arduino.cc/cloud/things/ff286879-1286-4520-9f2c-36d7e6f7b689 

  Arduino IoT Cloud Properties description

  The following variables are automatically generated and updated when changes are made to the Thing properties

  float airPollution;
  float lightSensor;

  Properties which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

// Ligh Sensor
#include <Wire.h>
#include <Digital_Light_TSL2561.h>

// Air Quality Sensor
#include "Air_Quality_Sensor.h"

AirQualitySensor sensor(A0);

void setup() {
  Wire.begin();
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  while (!Serial);

    Serial.println("Waiting sensors to init...");
    delay(20000);

    if (sensor.init()) {
        Serial.println("Air Quality Sensor ready.");
    } else {
        Serial.println("Air Quality Sensor ERROR!");
    }
    TSL2561.init();

  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  
  
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  Serial.println("LightSensorTest");
  int quality = sensor.slope();

    Serial.print("Sensor value: ");
    Serial.println(sensor.getValue());

    if (quality == AirQualitySensor::FORCE_SIGNAL) {
        Serial.println("High pollution! Force signal active.");
    } else if (quality == AirQualitySensor::HIGH_POLLUTION) {
        Serial.println("High pollution!");
    } else if (quality == AirQualitySensor::LOW_POLLUTION) {
        Serial.println("Low pollution!");
    } else if (quality == AirQualitySensor::FRESH_AIR) {
        Serial.println("Fresh air.");
    }
    Serial.println("Light:");
    Serial.println(TSL2561.readVisibleLux());
    
    // Variablen Dashboard
    airPollution = sensor.getValue());
    lightSensor = (TSL2561.readVisibleLux());
  

  delay(1000);
  
}








